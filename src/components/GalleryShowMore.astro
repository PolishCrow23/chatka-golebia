---
const { images } = Astro.props;
const visibleImages = images.slice(0, 3);
const galleryId = `gallery-carousel-${Math.random().toString(36).slice(2, 9)}`;
---

<style>
    .gallery-container {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 1rem;
        padding: 1rem;
    }

    .gallery-item {
        cursor: pointer;
        position: relative;
    }

    .gallery-item img {
        width: 100%;
        height: 200px;
        object-fit: cover;
        border-radius: 8px;
    }

    .gallery-launcher {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 200px;
        background: #ccc;
        color: #333;
        font-weight: bold;
        font-size: 1rem;
        border-radius: 8px;
        cursor: pointer;
        text-align: center;
    }
</style>

<div id={galleryId} class="gallery-container" aria-label="Image gallery">
    {visibleImages.map(({ src, thumb, caption }) => (
            <a
                    class="gallery-item"
                    data-src={src}
                    data-sub-html={caption || ''}
                    href={src}
                    tabindex="0"
                    role="link"
            >
                <img src={thumb} alt="Gallery image" />
            </a>
    ))}

    <div
            class="gallery-item gallery-launcher"
            id={`launcher-${galleryId}`}
            role="button"
            tabindex="0"
            aria-label={`Show all images, total ${images.length}`}
    >
        Show all images ({images.length})
    </div>
</div>

<!-- Hidden container for full gallery -->
<div id={`lightgallery-full-${galleryId}`} style="display:none;">
    {images.map(({ src, caption }) => (
            <a
                    class="gallery-item"
                    data-src={src}
                    data-sub-html={caption || ''}
                    href={src}
            >
                <img src={src} alt="" />
            </a>
    ))}
</div>

<script type="module">
    import lightGallery from 'lightgallery';
    import lgThumbnail from 'lightgallery/plugins/thumbnail';
    import lgZoom from 'lightgallery/plugins/zoom';

    document.addEventListener('DOMContentLoaded', () => {
        // Initialize gallery on visible thumbnails container
        const visibleGallery = document.getElementById('{galleryId}');
        if (!visibleGallery) return;

        lightGallery(visibleGallery, {
            plugins: [lgThumbnail, lgZoom],
            speed: 500,
            dynamic: false,
            selector: '.gallery-item',  // only links with this class open gallery
        });

        // Setup click handler for launcher box
        const launcher = document.getElementById(`launcher-{galleryId}`);
        const fullGalleryContainer = document.getElementById(`lightgallery-full-{galleryId}`);

        if (launcher && fullGalleryContainer) {
            launcher.addEventListener('click', () => {
                const gallery = lightGallery(fullGalleryContainer, {
                    plugins: [lgThumbnail, lgZoom],
                    speed: 500,
                    dynamic: true,
                    dynamicEl: Array.from(fullGalleryContainer.querySelectorAll('.gallery-item')).map(el => ({
                        src: el.getAttribute('data-src'),
                        thumb: el.querySelector('img')?.src,
                        subHtml: el.getAttribute('data-sub-html'),
                    })),
                });

                gallery.openGallery();
            });

            launcher.addEventListener('keydown', (e) => {
                if (e.key === 'Enter' || e.key === ' ') {
                    e.preventDefault();
                    launcher.click();
                }
            });
        }
    });
</script>
